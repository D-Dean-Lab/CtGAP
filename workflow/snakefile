import sys
from pathlib import Path
from rich import print as pprint

configfile: "config/config.yaml"
include: "rules/common.smk"

# inputs
INDIR = Path(config["indir"])
OUTDIR = Path(config["outdir"])
SAMPLESHEET = Path(config["sample_sheet"])
RESOURCES = Path(config["resourcesPath"])

#misc
MODE = config["mode"]
ORG = config["organism"]
REFSET = RESOURCES / "references" / ORG / "refset.fasta"
ADAPTERS = RESOURCES / "references" / ORG / "adapters.fasta"
BARCODES = RESOURCES / "references" / ORG / "barcodes.fasta"
SCAFFOLDREF = RESOURCES / "references" / ORG / "scaffold.fasta"

# references
HUMANREF = Path(config["homoReference"])

# databaes
KRAKENDB = Path(config["krakenDB"])
OMPABLASTDB = Path(config["ompaBlastDB"])
MLSTDB = Path(config["mlstDB"])

# reference configuration
if config["reference"] == "plurality":
	REF = RESOURCES / "references" / ORG / "plurality.fasta"
elif config["reference"] == "reference_set":
	REF = RESOURCES / "references" / ORG / "refset.fasta"
else:
	REF = RESOURCES / "references" / ORG / f"{config['reference']}"

# get samples
SAMPLE_NAME, PAIR = glob_wildcards(INDIR / "{sample_name}_{pair}.fastq.gz")
SAMPLES = set(SAMPLE_NAME)

# dictReads = parseSamples(SAMPLESHEET)
# SAMPLES = list(dictReads.keys())
if not SAMPLES:
	pprint("[yellow]No input samples were detected. Check the files are named properly:[/yellow] [green bold]{sample_name}_{pair}[/green bold]")
	sys.exit()

rule all:
	input:
		# denovo
		OUTDIR / "status" / "denovo.collate.blast.txt",
		expand(OUTDIR / "status" / "mlst.{sample}.txt", sample = SAMPLES),
		# ref-denovo
		expand(OUTDIR / "status" / "ref-denovo.mlst.{sample}.txt", sample = SAMPLES),
		OUTDIR / "status" / "ref-denovo.collage.coverage.txt",
		OUTDIR / "status" / "ref-denovo.collate.blast.txt",

# common modules
include: "rules/1-trim.smk"
include: "rules/2-scrub.smk"
include: "rules/3-qc.smk"

# modes module
if config["mode"] == "denovo":
	include: "rules/4-assemble.smk"
	print("here2")
elif config["mode"] == "ref-denovo":
	include: "rules/5-align.smk"
elif config["mode"] == "both":
	include: "rules/4-assemble.smk"
	include: "rules/5-align.smk"
