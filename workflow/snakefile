import sys
from pathlib import Path
from rich import print as pprint

configfile: "config/config.yaml"
include: "rules/common.smk"

# inputs
INDIR = Path(config["indir"])
OUTDIR = Path(config["outdir"])
RESOURCES = Path(config["resourcesPath"])

#misc
MODE = config["mode"]
ORG = config["organism"]
REFSET = RESOURCES / "references" / ORG / "refset.fasta"
ADAPTERS = RESOURCES / "references" / ORG / "adapters.fasta"
BARCODES = RESOURCES / "references" / ORG / "barcodes.fasta"
SCAFFOLDREF = RESOURCES / "references" / ORG / "scaffold.fasta"
INDIVIDUAL = (RESOURCES / "references" / ORG / "individual").glob("*")
INDIVIDUAL_DICT = {n.stem:str(n.resolve()) for n in INDIVIDUAL}

# references
HUMANREF = Path(config["homoReference"])

# databaes
KRAKENDB = Path(config["krakenDB"])
OMPABLASTDB = Path(config["ompaBlastDB"])
MLSTDB = Path(config["mlstDB"])

# reference configuration
if config["reference"] == "plurality":
	REF = RESOURCES / "references" / ORG / "plurality.fasta"
elif config["reference"] == "reference_set":
	REF = RESOURCES / "references" / ORG / "refset.fasta"
else:
	REF = RESOURCES / "references" / ORG / f"{config['reference']}"

# get samples
SAMPLE_NAME, PAIR = glob_wildcards(INDIR / "{sample_name}_{pair}.fastq.gz")
SAMPLES = set(SAMPLE_NAME)

if not SAMPLES:
	pprint("[yellow] No samples were detected. Check sample sheet (samples.csv) and update sample locations as per the example.[/yellow]")
	sys.exit()

#input files for rule all
#denovo only
denovo_input_list = [
    expand(OUTDIR / "status" / "denovo.collate.blast.txt", sample=SAMPLES),
    expand(OUTDIR / "status" / "denovo.mlst.collate.txt", sample=SAMPLES),
    expand(OUTDIR / "tree" / "ska_alignment.fasta", sample=SAMPLES),
    expand(OUTDIR / f"{ORG}.tree", sample=SAMPLES),
    expand(OUTDIR / "status" / "denovo.quast.{sample}.txt", sample=SAMPLES)
]
#ref-denovo_only
ref_denovo_input_list = [
    expand(OUTDIR / "status" / "ref-denovo.collate.coverage.txt", sample=SAMPLES),
    expand(OUTDIR / "status" / "ref-denovo.collate.blast.txt", sample=SAMPLES),
    expand(OUTDIR / "status" / "ref-denovo.mlst.collate.txt", sample=SAMPLES),
    expand(OUTDIR / "status" / "ref-denovo.quast.{sample}.txt", sample=SAMPLES)
]
#only when both run
only_both_list = [
    expand(OUTDIR / "status" / "dnadiff.{sample}.txt", sample=SAMPLES)
]

if config["mode"] == "denovo":
	input_list = denovo_input_list
elif config["mode"] == "reference-denovo":
	input_list = ref_denovo_input_list
elif config["mode"] == "both":
	input_list = denovo_input_list + ref_denovo_input_list + only_both_list
else:
	print(config["mode"], " is an invalid mode. Modes are limited to 'denovo', 'reference-denovo', or 'both'.")

rule all:
	input:
		input_list

# common modules
include: "rules/1-trim.smk"
include: "rules/2-scrub.smk"
include: "rules/3-qc.smk"
include: "rules/dnadiff.smk"


# modes module
if config["mode"] == "denovo":
	include: "rules/4-assemble.smk"
elif config["mode"] == "reference-denovo":
	include: "rules/5-align.smk"
elif config["mode"] == "both":
	include: "rules/4-assemble.smk"
	include: "rules/5-align.smk"