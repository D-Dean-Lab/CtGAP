import sys
from pathlib import Path
configfile: "config/config.yaml"
include: "rules/common.smk"

INDIR = Path(config["indir"])
OUTDIR = Path(config["outdir"])
KRAKENDB = config["krakenDB"]
HUMANREF = config["homoReference"]
CTREF = config["ctReference"]
ADAPTERS = config["adapters"]
OMPABLASTDB = config["ompaBlastDB"]
SCAFFOLDREF = config["scaffoldReference"]
MLSTDBLOC = Path(config["mlstDBLoc"])

# get samples
SAMPLE_NAME, PAIR = glob_wildcards(INDIR / "{sample_name}_{pair}.fastq.gz")
SAMPLES = set(SAMPLE_NAME)
if not SAMPLES:
	print("No input samples were detected. Check the files are named properly: {sample_name}_{pair}")
	sys.exit()

rule all:
	input:
		# trim and qc
		expand(OUTDIR / "status" / "trim.{sample}.txt", sample = SAMPLES),
		expand(OUTDIR / "status" / "scrub.{sample}.txt", sample = SAMPLES),
		expand(OUTDIR / "status" / "trim.scrub.{sample}.txt", sample = SAMPLES),

		# denovo
		expand(OUTDIR / "status" / "shovill.{sample}.txt", sample = SAMPLES),
		expand(OUTDIR / "status" / "blastn.{sample}.txt", sample = SAMPLES),
		expand(OUTDIR / "status" / "scaffold.{sample}.txt", sample = SAMPLES),
		
		# alignment 
		expand(OUTDIR / "status" / "aligned.{sample}.txt", sample = SAMPLES),

		# mlst
		expand(OUTDIR / "status" / "mlst.{sample}.txt", sample = SAMPLES),

		# collation
		OUTDIR / "status" / "collate.blast.txt",
		OUTDIR / "status" / "collage.coverage.txt",
		# OUTDIR / "qc" / "multiqc_report.html",




# modules
include: "rules/1-trim.smk"
include: "rules/2-scrub.smk"
include: "rules/3-qc.smk"
include: "rules/4-assemble.smk"
include: "rules/scaffold.smk"
include: "rules/5-align.smk"
include: "rules/6-collate.smk"
include: "rules/blast.smk"
include: "rules/mlst.smk"